{"ast":null,"code":"var _jsxFileName = \"/home/shine/practiceDcc/src/web/components/Card/Card.tsx\";\nimport React from 'react';\nimport CardBody from \"tt-frontend-components/Card/CardBody.tsx\";\nimport Button from \"tt-frontend-components/Button/Button.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-title text-uppercase text-truncate py-2\",\n          children: props.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items border border-light\",\n          children: props && props.data.map((obj, idx) => {\n            return /*#__PURE__*/_jsxDEV(CardBody, {\n              bodyObj: obj,\n              parentType: props.type,\n              onChildClick: obj => props.clickHandler(obj)\n            }, 'card-' + idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), props.type == 'To-Do' && /*#__PURE__*/_jsxDEV(Button, {\n        type: 'button',\n        onClick: () => props.addTaskHandler(),\n        label: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/shine/practiceDcc/src/web/components/Card/Card.tsx"],"names":["React","CardBody","Button","Card","props","type","data","map","obj","idx","clickHandler","addTaskHandler"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtB,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,8CAAd;AAAA,oBAA8DA,KAAK,CAACC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,oBACED,KAAK,IAAIA,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrC,gCACG,QAAC,QAAD;AAEE,cAAA,OAAO,EAAED,GAFX;AAGE,cAAA,UAAU,EAAEJ,KAAK,CAACC,IAHpB;AAIE,cAAA,YAAY,EAAGG,GAAD,IAASJ,KAAK,CAACM,YAAN,CAAmBF,GAAnB;AAJzB,eACO,UAAQC,GADf;AAAA;AAAA;AAAA;AAAA,oBADH;AAQA,WATQ;AADX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAiBGL,KAAK,CAACC,IAAN,IAAc,OAAd,iBACC,QAAC,MAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,OAAO,EAAE,MAAMD,KAAK,CAACO,cAAN,EAFjB;AAGE,QAAA,KAAK,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA/BD;;KAAMR,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardBody from \"tt-frontend-components/Card/CardBody.tsx\";\nimport Button from \"tt-frontend-components/Button/Button.tsx\";\nconst Card = (props) => {\n\n  return (\n    <React.Fragment>\n      <div className=\"card bg-light\">\n        <div className=\"card-body\">\n          <h6 className=\"card-title text-uppercase text-truncate py-2\">{props.type}</h6>\n          <div className=\"items border border-light\">\n           {props && props.data.map((obj, idx) => {\n             return(\n                <CardBody \n                  key={'card-'+idx} \n                  bodyObj={obj} \n                  parentType={props.type} \n                  onChildClick={(obj) => props.clickHandler(obj)}\n                />\n               )\n            })\n           }\n          </div>\n        </div>\n        {props.type == 'To-Do' && \n          <Button \n            type={'button'} \n            onClick={() => props.addTaskHandler()} \n            label={\"Add New Task\"} \n          />\n        }\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}