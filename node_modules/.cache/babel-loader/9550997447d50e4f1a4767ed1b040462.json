{"ast":null,"code":"var _jsxFileName = \"/home/shine/practiceDcc/src/routes/index.tsx\";\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Login from 'tt-frontend-pages/Authentication/Login';\nimport Register from 'tt-frontend-pages/Authentication/Register';\nimport ForgotPassword from 'tt-frontend-pages/Authentication/ForgotPassword';\nimport ResetPassword from 'tt-frontend-pages/Authentication/ResetPassword';\nimport Board from 'tt-frontend-pages/Board/Board';\nimport { isLoggedIn } from 'tt-frontend-utils/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isLoggedIn() ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 2\n}, this);\n\n_c = PrivateRoute;\n\nconst PublicRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !isLoggedIn() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/board'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 2\n}, this);\n\n_c2 = PublicRoute;\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/login\",\n      component: Login,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/register\",\n      component: Register,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/forgot-password\",\n      component: ForgotPassword,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/reset-password\",\n      component: ResetPassword,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/board\",\n      component: Board,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }, this),\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["/home/shine/practiceDcc/src/routes/index.tsx"],"names":["React","Redirect","Route","Switch","Login","Register","ForgotPassword","ResetPassword","Board","isLoggedIn","PrivateRoute","component","Component","rest","props","pathname","PublicRoute","Routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,QAAP,MAAqB,2CAArB;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACpB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC7BL,UAAU,kBACT,QAAC,KAAD,OAAWI,IAAX;AAAkB,IAAA,MAAM,EAAGC,KAAK,iBAAK,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,UADS,gBAGT,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACbC,MAAAA,QAAQ,EAAE;AADG;AAAd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,QADD;;KAAML,Y;;AAYN,MAAMM,WAAW,GAAG,CAAC;AAAEL,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACnB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC7B,CAACL,UAAU,EAAX,gBACC,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,UADD,gBAGC,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACbC,MAAAA,QAAQ,EAAE;AADG;AAAd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,QADD;;MAAMC,W;;AAYN,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,QAAnB;AAA6B,MAAA,SAAS,EAAEb,KAAxC;AAA+C,MAAA,KAAK;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,WAAnB;AAAgC,MAAA,SAAS,EAAEC,QAA3C;AAAqD,MAAA,KAAK;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,kBAAnB;AAAuC,MAAA,SAAS,EAAEC,cAAlD;AAAkE,MAAA,KAAK;AAAvE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,iBAAnB;AAAsC,MAAA,SAAS,EAAEC,aAAjD;AAAgE,MAAA,KAAK;AAArE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE,QAApB;AAA8B,MAAA,SAAS,EAAEC,KAAzC;AAAgD,MAAA,KAAK;AAArD;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAE,mBAAM,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAA9B;AAA0D,MAAA,KAAK;AAA/D;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;MAAMS,M;AAcN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Login from 'tt-frontend-pages/Authentication/Login';\nimport Register from 'tt-frontend-pages/Authentication/Register';\nimport ForgotPassword from 'tt-frontend-pages/Authentication/ForgotPassword';\nimport ResetPassword from 'tt-frontend-pages/Authentication/ResetPassword';\nimport Board from 'tt-frontend-pages/Board/Board';\nimport {isLoggedIn} from 'tt-frontend-utils/Service'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\t<Route {...rest} render={props => (\n\t\tisLoggedIn() ? (\n\t\t\t<Route {...rest}  render={ props => (<Component {...props} />)} />\n\t\t) :\n\t\t\t<Redirect to={{\n\t\t\t\tpathname: '/login',\n\t\t\t}} />\n\n\t)} />\n)\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n\t<Route {...rest} render={props => (\n\t\t!isLoggedIn() ? (\n\t\t\t<Component {...props} />\n\t\t) :\n\t\t\t<Redirect to={{\n\t\t\t\tpathname: '/board',\n\t\t\t}} />\n\n\t)} />\n)\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <PublicRoute path={\"/login\"} component={Login} exact />\n      <PublicRoute path={\"/register\"} component={Register} exact />\n      <PublicRoute path={\"/forgot-password\"} component={ForgotPassword} exact />\n      <PublicRoute path={\"/reset-password\"} component={ResetPassword} exact />\n      <PrivateRoute path={\"/board\"} component={Board} exact />\n\n      <Route path=\"/\" render={() => <Redirect to={'/login'} />} exact />\n    </Switch>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}