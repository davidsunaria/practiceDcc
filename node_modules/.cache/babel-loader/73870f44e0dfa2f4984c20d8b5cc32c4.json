{"ast":null,"code":"var _jsxFileName = \"/home/shine/practiceDcc/src/web/components/Button/Button.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const [btnClass, setBtnClass] = useState(\"btn btn-lg btn-primary btn-block text-uppercase\");\n  const [loadingMsg, setLoadingMsg] = useState(\"Processing...\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: btnClass,\n      onClick: () => props.onClick(),\n      children: [props.disableBtn ? loadingMsg : props.label, props.disableBtn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border \",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"3XyFjc+YEDJUaah6ybcNEoiItNo=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/shine/practiceDcc/src/web/components/Button/Button.tsx"],"names":["React","useState","Button","props","btnClass","setBtnClass","loadingMsg","setLoadingMsg","onClick","disableBtn","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,iDAAD,CAAxC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,eAAD,CAA5C;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEG,QAAjC;AAA2C,MAAA,OAAO,EAAE,MAAOD,KAAK,CAACK,OAAN,EAA3D;AAAA,iBACGL,KAAK,CAACM,UAAN,GAAmBH,UAAnB,GAAgCH,KAAK,CAACO,KADzC,EAEGP,KAAK,CAACM,UAAN,iBACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;GAAMP,M;;KAAAA,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst Button = (props) => {\n\n  const [btnClass, setBtnClass] = useState(\"btn btn-lg btn-primary btn-block text-uppercase\");\n  const [loadingMsg, setLoadingMsg] = useState(\"Processing...\");\n\n  return (\n    <React.Fragment>\n      <button type=\"button\" className={btnClass} onClick={() =>  props.onClick()}>\n        {props.disableBtn ? loadingMsg : props.label}\n        {props.disableBtn &&\n          <div className=\"spinner-border \" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        }\n      </button>\n    </React.Fragment>\n  );\n};\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}