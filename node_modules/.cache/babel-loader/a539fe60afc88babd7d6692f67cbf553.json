{"ast":null,"code":"var _jsxFileName = \"/home/shine/practiceDcc/src/web/components/Card/CardBody.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardBody = props => {\n  _s();\n\n  const [timer, setTimer] = useState(props.bodyObj.time);\n  const countRef = /*#__PURE__*/createRef(props.bodyObj.id);\n  useEffect(() => {\n    if (props.parentType && props.parentType === 'In-Progress') {\n      handleStart();\n    }\n  }, []);\n  useEffect(() => {\n    if (props.parentType && props.parentType === 'In-Progress') {\n      if (props.bodyObj.time != 0) setTimer(props.bodyObj.time);\n    }\n  }, [props.bodyObj]);\n\n  const handleStart = () => {\n    countRef.current = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n  };\n\n  const handleReset = () => {\n    clearInterval(countRef.current);\n    setTimer(props.bodyObj.time);\n  };\n\n  const handleAction = (obj, type) => {\n    if (type === 'In-Progress') {\n      obj.time = timer;\n      handleReset();\n      props.onChildClick(obj);\n    } else {\n      props.onChildClick(obj);\n    }\n  };\n\n  const formatTime = timer => {\n    const getSeconds = `0${timer % 60}`.slice(-2);\n    const minutes = `${Math.floor(timer / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card draggable shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"//placehold.it/30\",\n            className: \"rounded-circle float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"lead font-weight-light\",\n            children: props.bodyObj.cardNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), props.bodyObj.type === 'inprogress' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 53\n          }, this), props.bodyObj.type === 'complete' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", `${props.bodyObj.price}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.bodyObj.cardDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), props.bodyObj.type !== 'complete' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAction(props.bodyObj, props.parentType),\n          className: \"btn btn-primary btn-sm\",\n          children: props.bodyObj.type === 'todo' ? 'Start' : props.bodyObj.type === 'inprogress' ? 'Resolve' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardBody, \"K3bVWxPHie2eoJqOSX19WFF/Rho=\");\n\n_c = CardBody;\nexport default CardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBody\");","map":{"version":3,"sources":["/home/shine/practiceDcc/src/web/components/Card/CardBody.tsx"],"names":["React","useState","useEffect","createRef","CardBody","props","timer","setTimer","bodyObj","time","countRef","id","parentType","handleStart","current","setInterval","handleReset","clearInterval","handleAction","obj","type","onChildClick","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","cardNumber","price","cardDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react';\n\nconst CardBody = (props) => {\n  const [timer, setTimer] = useState(props.bodyObj.time)\n  const countRef = createRef(props.bodyObj.id)\n\n  useEffect(() => {\n    if(props.parentType && props.parentType === 'In-Progress' ) {\n      handleStart();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(props.parentType && props.parentType === 'In-Progress' ) {\n      if(props.bodyObj.time != 0)\n        setTimer(props.bodyObj.time);\n    }\n  }, [props.bodyObj])\n\n  const handleStart = () => {\n    countRef.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\n\n  const handleReset = () => {\n    clearInterval(countRef.current)\n    setTimer(props.bodyObj.time);\n  }\n\n  const handleAction = (obj, type) => {\n    if(type === 'In-Progress' ) {\n      obj.time = timer;\n      handleReset();\n      props.onChildClick(obj)\n    } else {\n      props.onChildClick(obj)\n    }\n  }\n\n  const formatTime = (timer) => {\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\n    const minutes = `${Math.floor(timer / 60)}`\n    const getMinutes = `0${minutes % 60}`.slice(-2)\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\n\n    return `${getHours} : ${getMinutes} : ${getSeconds}`\n  }\n  return (\n    <React.Fragment>\n      <div className=\"card draggable shadow-sm\" >\n        <div className=\"card-body p-2\">\n          <div className=\"card-title\">\n            <img src=\"//placehold.it/30\" className=\"rounded-circle float-right\" />\n            <a className=\"lead font-weight-light\">{props.bodyObj.cardNumber}</a>\n            {props.bodyObj.type === 'inprogress' && <p>{formatTime(timer)}</p> }\n            {props.bodyObj.type === 'complete' && <p>${`${props.bodyObj.price}`}</p> }\n          </div>\n          <p>\n            {props.bodyObj.cardDescription}\n          </p>\n          {(props.bodyObj.type !== 'complete') &&\n            <button\n              onClick={() => handleAction(props.bodyObj, props.parentType)}\n              className=\"btn btn-primary btn-sm\">{(props.bodyObj.type === 'todo') ? 'Start' : (props.bodyObj.type === 'inprogress') ? 'Resolve' : ''}\n            </button>\n          }\n        </div>\n      </div>\n\n    </React.Fragment>\n  );\n};\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}